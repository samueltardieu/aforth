package body Aforth.Builtins is
begin
   Aforth.Interpret_Line (": \ TIB# @ >IN ! ;");
   Aforth.Interpret_Line (": CONSTANT ALIGN CREATE , DOES> @ ;");
   Aforth.Interpret_Line (": VARIABLE ALIGN CREATE 0 , ;");
   Aforth.Interpret_Line (": 2VARIABLE ALIGN CREATE 0 , 0 , ;");
   Aforth.Interpret_Line (": 0= 0 = ;");
   Aforth.Interpret_Line (": 0< 0 < ;");
   Aforth.Interpret_Line (": 0> 0 > ;");
   Aforth.Interpret_Line (": 0<= 0 <= ;");
   Aforth.Interpret_Line (": 0>= 0 >= ;");
   Aforth.Interpret_Line (": 0<> 0 <> ;");
   Aforth.Interpret_Line (": 2* 2 * ;");
   Aforth.Interpret_Line (": 2/ 2 / ;");
   Aforth.Interpret_Line (": 1+ 1 + ;");
   Aforth.Interpret_Line (": 1- 1 - ;");
   Aforth.Interpret_Line (": 2DROP DROP DROP ;");
   Aforth.Interpret_Line (": 2DUP OVER OVER ;");
   Aforth.Interpret_Line (": ( [CHAR] ) PARSE 2DROP ;");
   Aforth.Interpret_Line (": TUCK SWAP OVER ;");
   Aforth.Interpret_Line (": +! TUCK @ + SWAP ! ;");
   Aforth.Interpret_Line (": DECIMAL 10 BASE ! ;");
   Aforth.Interpret_Line (": HEX 16 BASE ! ;");
   Aforth.Interpret_Line (": CELL 4 ;");
   Aforth.Interpret_Line (": CELLS CELL * ;");
   Aforth.Interpret_Line (": CELL+ CELL + ;");
   Aforth.Interpret_Line (": 2! SWAP OVER ! CELL+ ! ;");
   Aforth.Interpret_Line (": 2@ DUP CELL+ @ SWAP @ ;");
   Aforth.Interpret_Line (": 2OVER 3 PICK 3 PICK ;");
   Aforth.Interpret_Line (": ROT 2 ROLL ;");
   Aforth.Interpret_Line (": ?DUP DUP IF DUP THEN ;");
   Aforth.Interpret_Line (": NEGATE 0 SWAP - ;");
   Aforth.Interpret_Line (": ABS DUP 0< IF NEGATE THEN ;");
   Aforth.Interpret_Line (": ALIGNED CELL 1- + CELL / CELL * ;");
   Aforth.Interpret_Line (": ALLOT HERE +! ;");
   Aforth.Interpret_Line (": INVERT NEGATE 1- ;");
   Aforth.Interpret_Line (": CHAR+ 1 + ;");
   Aforth.Interpret_Line (": CHARS ;");
   Aforth.Interpret_Line (": COUNT DUP CHAR+ SWAP C@ ;");
   Aforth.Interpret_Line (": NIP SWAP DROP ;");
   Aforth.Interpret_Line (": MAX 2DUP > IF DROP ELSE NIP THEN ;");
   Aforth.Interpret_Line (": MIN 2DUP > IF NIP ELSE DROP THEN ;");
   Aforth.Interpret_Line (": MOD /MOD DROP ;");
   Aforth.Interpret_Line (": .( [CHAR] ) PARSE TYPE ; IMMEDIATE");
   Aforth.Interpret_Line ("0 CONSTANT FALSE");
   Aforth.Interpret_Line ("-1 CONSTANT TRUE");
   Aforth.Interpret_Line ("ALIGN CREATE PAD 256 ALLOT");
   Aforth.Interpret_Line (": ['] ' POSTPONE LITERAL ; IMMEDIATE");
   Aforth.Interpret_Line (": VALUE CONSTANT ;");
   Aforth.Interpret_Line (": TO ' >BODY STATE @ IF POSTPONE LITERAL" &
      " POSTPONE ! ELSE ! THEN ; IMMEDIATE");
   Aforth.Interpret_Line (": -ROT ROT ROT ;");
   Aforth.Interpret_Line (": DEFER VARIABLE DOES> @ ?DUP IF EXECUTE" &
      " THEN ;");
   Aforth.Interpret_Line (": IS ' >BODY ! ;");
end Aforth.Builtins;
